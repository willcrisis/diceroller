{"version":3,"sources":["/Users/williankrause/des/diceroller/components/Button.js","/Users/williankrause/des/diceroller/components/ContainedButton.js","/Users/williankrause/des/diceroller/components/Die.js","/Users/williankrause/des/diceroller/constants/Button.js","/Users/williankrause/des/diceroller/components/DieButton.js","/Users/williankrause/des/diceroller/components/OutlinedButton.js","/Users/williankrause/des/diceroller/components/ScreenContainer.js","/Users/williankrause/des/diceroller/components/Spacer.js","/Users/williankrause/des/diceroller/constants/Colors.js","/Users/williankrause/des/diceroller/components/TabBarIcon.js","/Users/williankrause/des/diceroller/config/index.js","/Users/williankrause/des/diceroller/context/AlertContext.js","/Users/williankrause/des/diceroller/services/FirebaseService.js","/Users/williankrause/des/diceroller/services/AuthService.js","/Users/williankrause/des/diceroller/context/AuthContext.js","/Users/williankrause/des/diceroller/services/DataService.js","/Users/williankrause/des/diceroller/context/DataContext.js","/Users/williankrause/des/diceroller/context/AppContext.js","/Users/williankrause/des/diceroller/screens/BoardScreen.js","/Users/williankrause/des/diceroller/screens/DiceRollScreen.js","/Users/williankrause/des/diceroller/screens/Session/SessionsScreen.js","/Users/williankrause/des/diceroller/screens/SettingsScreen.js","/Users/williankrause/des/diceroller/screens/tabs.js","/Users/williankrause/des/diceroller/navigation/MainTabNavigator.js","/Users/williankrause/des/diceroller/screens/Session/JoinSessionScreen.js","/Users/williankrause/des/diceroller/screens/LoadingScreen.js","/Users/williankrause/des/diceroller/screens/Auth/AuthScreen.js","/Users/williankrause/des/diceroller/screens/Auth/RegisterScreen.js","/Users/williankrause/des/diceroller/navigation/MainNavigation.js","/Users/williankrause/des/diceroller/navigation/AppNavigator.web.js","/Users/williankrause/des/diceroller/App.js","/Users/williankrause/des/diceroller/assets/images/robot-dev.png","/Users/williankrause/des/diceroller/assets/images/robot-prod.png"],"names":["Button","props","ContainedButton","mode","animateToValue","animationValue","newValue","callback","LayoutAnimation","configureNext","create","Types","linear","Properties","scaleXY","Animated","timing","toValue","duration","useNativeDriver","start","styles","StyleSheet","container","display","alignItems","justifyContent","margin","borderColor","borderWidth","width","height","content","Die","type","value","onPress","useState","Value","scaleAnimation","useEffect","TouchableComponent","TouchableRipple","supported","TouchableOpacity","View","style","transform","scale","Headline","Text","buttonStyle","button","flex","marginHorizontal","DieButton","faces","dark","compact","max","Math","floor","random","uppercase","OutlinedButton","backgroundColor","centeredHorizontal","centeredVertical","ScreenContainer","children","centered","appliedStyles","push","spacer","Spacer","tintColor","tabIconDefault","tabIconSelected","tabBar","errorBackground","errorText","warningBackground","warningText","noticeBackground","noticeText","TabBarIcon","Ionicons","name","size","marginBottom","color","focused","Colors","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","configure","firebase","initializeApp","AlertContext","createContext","_showAlert","setAlert","setVisible","alert","hideAlert","useShowAlert","useContext","showAlert","AlertContextProvider","isVisible","Provider","Snackbar","visible","action","onDismiss","text","extractData","snapshot","data","key","id","sort","a","b","loadData","currentUser","currentSession","setDice","setSessions","setCurrentSession","setSessionDice","async","unsubscribes","currentSessionId","AsyncStorage","getItem","firestoreRef","firestore","currentUserId","uid","doc","onSnapshot","exists","userSessions","sessions","length","Promise","all","map","sessionId","get","set","filter","merge","session","removeItem","ref","collection","orderBy","diceSnapshot","dice","forEach","dieSnapshot","usersDice","usersSnapshot","userSnapshot","owner","userData","user","userDiceSnapshot","userDice","Object","values","addDie","add","timestamp","Date","removeDie","delete","clearDie","addSession","removeSession","sessionSnapshot","Error","listenToLoginChanges","setCurrentUser","setAuthLoading","auth","onAuthStateChanged","FirebaseService","loginWithEmailAndPassword","email","password","signInWithEmailAndPassword","logOut","signOut","registerWithEmailAndPassword","createUserWithEmailAndPassword","updateProfile","displayName","AuthContext","_loginWithEmailAndPassword","message","_registerWithEmailAndPassword","useAuth","AuthContextProvider","isAuthLoading","ENTITIES","getData","entityName","entityId","FirebaseDataService","joinSession","DataContext","actionBuilder","array","addData","removeData","clearData","chooseSession","setItem","getSession","_joinSession","useData","DataContextProvider","sessionDice","isDataLoading","setDataLoading","then","subscriptions","console","log","unsubscribe","AppContext","useApp","AppContextProvider","isAppLoading","setAppLoading","Row","row","Window","total","reduce","acc","window","userName","ScrollView","scrollContainer","contentContainerStyle","scrollViewContainer","BoardScreen","groups","listSize","index","ceil","calculateRows","rows","elementsPerRow","item","group","navigationOptions","header","title","iconName","flexDirection","marginTop","flexWrap","paddingVertical","borderTopColor","borderTopWidth","position","top","left","DiceRollScreen","emptyMessage","die","rolledDice","shadow","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","web","boxShadow","AddSessionDialog","isOpen","setOpen","setName","dismiss","dismissModal","Portal","Dialog","Title","Content","TextInput","label","onChangeText","Actions","SessionMenu","Menu","anchor","icon","Item","Clipboard","setString","setTimeout","currentSessionBackground","SessionsScreen","navigation","isModalOpen","setModalOpen","FlatList","renderItem","listItem","navigate","selectSession","right","FAB","fab","bottom","borderBottomColor","borderBottomWidth","SettingsScreen","board","roll","settings","headerMode","default","routes","keys","screens","Component","reduceFn","screen","Comp","Screen","Appbar","Header","Stack","createStackNavigator","tabBarLabel","tabBarIcon","OS","path","TabNavigator","createMaterialBottomTabNavigator","initialRouteName","goToSessions","JoinSessionScreen","setSession","loadingSession","setLoadingSession","getParam","sessionData","loadSession","find","ActivityIndicator","join","loadResourcesAsync","Asset","loadAsync","require","Font","font","handleLoadingError","error","warn","LoadingScreen","AppLoading","startAsync","onError","onFinish","handleFinishLoading","AuthScreen","setEmail","setPassword","secureTextEntry","RegisterScreen","confirmPassword","setConfirmPassword","validatePassword","goBack","AppNavigator","createSwitchNavigator","Main","MainTabNavigator","Join","JoinScreen","AuthNavigator","Auth","Register","SwitchNavigator","App","TestNavigator","isLoading","router","MainNavigation","BrowserApp","createBrowserApp","history","useScreens","appPrefix","Linking","makeUrl","StatusBar","barStyle","uriPrefix","module","exports"],"mappings":"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","file":"static/js/app.7262f7f6.chunk.js","sourcesContent":["import React from 'react';\nimport { Button as PaperButton } from 'react-native-paper';\n\nconst Button = ({ ...props }) => <PaperButton {...props} />;\n\nexport default Button;\n","import React from 'react';\nimport Button from '../components/Button';\n\nconst ContainedButton = ({ ...props }) => <Button {...props} mode=\"contained\" />;\nexport default ContainedButton;\n","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, TouchableOpacity, Animated, LayoutAnimation } from 'react-native';\nimport { Headline, TouchableRipple, Text } from 'react-native-paper';\n\nconst SIZE = 100;\nconst PRESS_TIMEOUT = 200;\n\nconst animateToValue = (animationValue, newValue, callback = () => {}) => {\n  LayoutAnimation.configureNext(\n    LayoutAnimation.create(\n      PRESS_TIMEOUT,\n      LayoutAnimation.Types.linear,\n      LayoutAnimation.Properties.scaleXY\n    )\n  );\n  Animated.timing(animationValue, {\n    toValue: newValue,\n    duration: PRESS_TIMEOUT,\n    useNativeDriver: true,\n  }).start(callback);\n};\n\nconst Die = ({ type, value, onPress }) => {\n  const [scaleAnimation] = useState(new Animated.Value(0));\n\n  useEffect(() => {\n    animateToValue(scaleAnimation, 1);\n    return () => {\n      animateToValue(scaleAnimation, 0);\n    };\n  }, []);\n\n  const TouchableComponent = TouchableRipple.supported ? TouchableRipple : TouchableOpacity;\n\n  const handleOnPress = () => {\n    if (onPress) {\n      animateToValue(scaleAnimation, 0, onPress);\n    }\n  };\n\n  return (\n    <Animated.View\n      style={[\n        {\n          transform: [\n            {\n              scale: scaleAnimation,\n            },\n          ],\n        },\n      ]}>\n      <TouchableComponent style={styles.container} onPress={handleOnPress}>\n        <View style={styles.content}>\n          <Headline>{value}</Headline>\n          <Text>{type}</Text>\n        </View>\n      </TouchableComponent>\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 10,\n    borderColor: '#ddd',\n    borderWidth: 1,\n    width: SIZE,\n    height: SIZE,\n  },\n  content: {\n    alignItems: 'center',\n  },\n});\n\nexport default Die;\n","import { StyleSheet } from 'react-native';\n\nexport const marginHorizontal = 5;\n\nexport const buttonStyle = StyleSheet.create({\n  button: {\n    flex: 1,\n    marginHorizontal,\n  },\n});\n","import React from 'react';\nimport { buttonStyle } from '../constants/Button';\nimport ContainedButton from './ContainedButton';\n\nconst rollRandomNumber = max => {\n  return Math.floor(Math.random() * max) + 1;\n};\n\nconst DieButton = ({ faces, onPress }) => {\n  const type = `d${faces}`;\n  return (\n    <ContainedButton\n      style={buttonStyle.button}\n      dark\n      compact\n      onPress={() => onPress({ type, value: rollRandomNumber(faces) })}\n      uppercase={false}>\n      {type}\n    </ContainedButton>\n  );\n};\n\nexport default DieButton;\n","import React from 'react';\nimport Button from '../components/Button';\n\nconst OutlinedButton = ({ ...props }) => <Button {...props} mode=\"outlined\" />;\n\nexport default OutlinedButton;\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nconst ScreenContainer = ({ children, centeredHorizontal, centeredVertical, centered }) => {\n  const appliedStyles = [styles.container];\n  if (centered) {\n    appliedStyles.push(styles.centeredHorizontal, styles.centeredVertical);\n  } else {\n    if (centeredHorizontal) {\n      appliedStyles.push(styles.centeredHorizontal);\n    }\n    if (centeredVertical) {\n      appliedStyles.push(styles.centeredVertical);\n    }\n  }\n\n  return <View style={appliedStyles}>{children}</View>;\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    width: '100%',\n  },\n  centeredHorizontal: {\n    alignItems: 'center',\n  },\n  centeredVertical: {\n    justifyContent: 'center',\n  },\n});\n\nexport default ScreenContainer;\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nconst Spacer = () => <View style={styles.spacer} />;\n\nconst styles = StyleSheet.create({\n  spacer: {\n    height: 30,\n  },\n});\n\nexport default Spacer;\n","const tintColor = '#2f95dc';\n\nexport default {\n  tintColor,\n  tabIconDefault: '#ccc',\n  tabIconSelected: tintColor,\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: tintColor,\n  noticeText: '#fff',\n};\n","import React from 'react';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport Colors from '../constants/Colors';\n\nexport default function TabBarIcon(props) {\n  return (\n    <Ionicons\n      name={props.name}\n      size={26}\n      style={{ marginBottom: -3 }}\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\n    />\n  );\n}\n","import firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyBHCc4hJNPQUGBu3mup6WJCVCylUwmUyys',\n  authDomain: 'dice-roller-d68fa.firebaseapp.com',\n  databaseURL: 'https://dice-roller-d68fa.firebaseio.com',\n  projectId: 'dice-roller-d68fa',\n  storageBucket: '',\n  messagingSenderId: '277235469300',\n  appId: '1:277235469300:web:b3717529c807f6b9',\n};\n\nconst configure = () => {\n  firebase.initializeApp(config);\n};\n\nexport default configure;\n","import React, { createContext, useState, useContext } from 'react';\nimport { Snackbar } from 'react-native-paper';\n\nexport const AlertContext = createContext({});\n\nconst _showAlert = (setAlert, setVisible) => alert => {\n  setAlert(alert);\n  setVisible(true);\n};\n\nconst hideAlert = (setAlert, setVisible) => () => {\n  setVisible(false);\n  setAlert(null);\n};\n\nconst AlertContextProvider = ({ children }) => {\n  const [alert, setAlert] = useState(null);\n  const [isVisible, setVisible] = useState(false);\n\n  return (\n    <AlertContext.Provider\n      value={{\n        showAlert: _showAlert(setAlert, setVisible),\n      }}>\n      {children}\n      <Snackbar\n        visible={isVisible}\n        action={alert && alert.action}\n        onDismiss={hideAlert(setAlert, setVisible)}>\n        {alert && alert.text}\n      </Snackbar>\n    </AlertContext.Provider>\n  );\n};\n\nexport const useShowAlert = () => {\n  const { showAlert } = useContext(AlertContext);\n  return showAlert;\n};\n\nexport default AlertContextProvider;\n","import firebase from 'firebase';\nimport '@firebase/firestore';\nimport '@firebase/auth';\nimport { AsyncStorage } from 'react-native';\n\nconst extractData = snapshot => ({\n  ...snapshot.data(),\n  key: snapshot.id,\n});\n\nconst sort = (a, b) => {\n  if (a > b) {\n    return 1;\n  } else if (a < b) {\n    return -1;\n  }\n  return 0;\n};\n\nexport const listenToLoginChanges = (setCurrentUser, setAuthLoading) =>\n  firebase.auth().onAuthStateChanged(user => {\n    setCurrentUser(user);\n    setAuthLoading(false);\n  });\n\nexport const loginWithEmailAndPassword = (email, password) =>\n  firebase.auth().signInWithEmailAndPassword(email, password);\n\nexport const registerWithEmailAndPassword = async (name, email, password) => {\n  const { user } = await firebase.auth().createUserWithEmailAndPassword(email, password);\n  await user.updateProfile({ displayName: name });\n  await firebase\n    .firestore()\n    .doc(`users/${user.uid}`)\n    .set({\n      name,\n    });\n};\n\nexport const logOut = async () => {\n  await AsyncStorage.removeItem('currentSession');\n  return firebase.auth().signOut();\n};\n\nexport const loadData = async (\n  currentUser,\n  currentSession,\n  setDice,\n  setSessions,\n  setCurrentSession,\n  setSessionDice\n) => {\n  const unsubscribes = [];\n\n  let currentSessionId = currentSession && currentSession.key;\n  if (!currentSessionId) {\n    currentSessionId = await AsyncStorage.getItem('currentSession');\n  }\n\n  const firestoreRef = firebase.firestore();\n\n  const currentUserId = currentUser && currentUser.uid;\n\n  if (currentUserId) {\n    unsubscribes.push(\n      firestoreRef.doc(`users/${currentUserId}`).onSnapshot(async snapshot => {\n        if (!snapshot.exists) {\n          return;\n        }\n        const currentUser = extractData(snapshot);\n        const userSessions = currentUser.sessions;\n        if (userSessions && userSessions.length > 0) {\n          let sessions = [];\n          sessions = await Promise.all(\n            userSessions.map(async sessionId => {\n              const snapshot = await firestoreRef.doc(`sessions/${sessionId}`).get();\n              if (snapshot.exists) {\n                return extractData(snapshot);\n              } else {\n                firestoreRef.doc(`users/${currentUserId}`).set(\n                  {\n                    sessions: userSessions.filter(id => id !== sessionId),\n                  },\n                  { merge: true }\n                );\n              }\n              return null;\n            })\n          );\n          setSessions(sessions.filter(session => session).sort((a, b) => sort(a.name, b.name)));\n        }\n      })\n    );\n  }\n\n  if (currentSessionId) {\n    unsubscribes.push(\n      firestoreRef.doc(`sessions/${currentSessionId}`).onSnapshot(async snapshot => {\n        if (!snapshot.exists) {\n          setCurrentSession(null);\n          setDice([]);\n          setSessionDice([]);\n          return AsyncStorage.removeItem('currentSession');\n        }\n        let session = extractData(snapshot);\n\n        if (!currentSession) {\n          setCurrentSession(session);\n        }\n\n        unsubscribes.push(\n          snapshot.ref\n            .collection(`users/${currentUserId}/dice`)\n            .orderBy('timestamp', 'asc')\n            .onSnapshot(diceSnapshot => {\n              let dice = [];\n              diceSnapshot.forEach(dieSnapshot => {\n                dice = [...dice, extractData(dieSnapshot)];\n              });\n              setDice(dice);\n            })\n        );\n\n        let usersDice = {};\n        unsubscribes.push(\n          snapshot.ref.collection('users').onSnapshot(usersSnapshot => {\n            usersSnapshot.forEach(async userSnapshot => {\n              if (userSnapshot.id !== session.owner) {\n                unsubscribes.push(\n                  firestoreRef.doc(`users/${userSnapshot.id}`).onSnapshot(userData => {\n                    const user = extractData(userData);\n                    unsubscribes.push(\n                      userSnapshot.ref.collection('dice').onSnapshot(userDiceSnapshot => {\n                        let userDice = [];\n                        userDiceSnapshot.forEach(dieSnapshot => {\n                          userDice = [...userDice, extractData(dieSnapshot)];\n                        });\n\n                        usersDice = {\n                          ...usersDice,\n                          [userSnapshot.id]: {\n                            user,\n                            dice: userDice,\n                          },\n                        };\n\n                        setSessionDice(\n                          Object.values(usersDice).sort((a, b) => sort(a.user.name, b.user.name))\n                        );\n                      })\n                    );\n                  })\n                );\n              }\n            });\n          })\n        );\n      })\n    );\n  }\n\n  return unsubscribes;\n};\n\nexport const addDie = async (value, currentUser) => {\n  const currentSessionId = await AsyncStorage.getItem('currentSession');\n  if (!currentUser || !currentSessionId) {\n    return;\n  }\n  const firestoreRef = firebase.firestore();\n  return firestoreRef.collection(`sessions/${currentSessionId}/users/${currentUser.uid}/dice`).add({\n    ...value,\n    timestamp: new Date(),\n  });\n};\n\nexport const removeDie = async ({ key }, currentUser) => {\n  const currentSessionId = await AsyncStorage.getItem('currentSession');\n  if (!currentUser || !currentSessionId) {\n    return;\n  }\n  const firestoreRef = firebase.firestore();\n  return firestoreRef\n    .doc(`sessions/${currentSessionId}/users/${currentUser.uid}/dice/${key}`)\n    .delete();\n};\n\nexport const clearDie = async currentUser => {\n  const currentSessionId = await AsyncStorage.getItem('currentSession');\n  if (!currentUser || !currentSessionId) {\n    return;\n  }\n  const firestoreRef = firebase.firestore();\n  const dice = await firestoreRef\n    .collection(`sessions/${currentSessionId}/users/${currentUser.uid}/dice`)\n    .get();\n  dice.forEach(async ({ id }) => {\n    await firestoreRef\n      .doc(`sessions/${currentSessionId}/users/${currentUser.uid}/dice/${id}`)\n      .delete();\n  });\n};\n\nexport const addSession = async (value, sessions, currentUser) => {\n  if (!currentUser) {\n    return;\n  }\n  const firestoreRef = firebase.firestore();\n  const session = await firestoreRef.collection(`sessions`).add({\n    ...value,\n    owner: currentUser.uid,\n  });\n\n  await firestoreRef.doc(`sessions/${session.id}/users/${currentUser.uid}`).set({\n    timestamp: new Date(),\n  });\n\n  return firestoreRef.doc(`users/${currentUser.uid}`).set(\n    {\n      sessions: [...sessions.map(({ key }) => key), session.id],\n    },\n    { merge: true }\n  );\n};\n\nexport const getSession = async sessionId => {\n  const snapshot = await firebase\n    .firestore()\n    .doc(`sessions/${sessionId}`)\n    .get();\n  if (snapshot.exists) {\n    return extractData(snapshot);\n  } else {\n    return null;\n  }\n};\n\nexport const removeSession = async ({ key }, sessions, currentUser) => {\n  if (!currentUser) {\n    return;\n  }\n  const firestoreRef = firebase.firestore();\n  const sessionSnapshot = await firestoreRef.doc(`sessions/${key}`).get();\n  const session = extractData(sessionSnapshot);\n  if (session.owner === currentUser.uid) {\n    await firestoreRef.doc(`sessions/${key}`).delete();\n    return firestoreRef.doc(`users/${currentUser.uid}`).set(\n      {\n        sessions: sessions.filter(session => session.key !== key).map(session => session.key),\n      },\n      { merge: true }\n    );\n  }\n  throw new Error('You are not the session owner.');\n};\n\nexport const joinSession = async (sessionId, sessions, currentUser) => {\n  if (!currentUser) {\n    return;\n  }\n\n  const firestoreRef = firebase.firestore();\n\n  await firestoreRef.doc(`sessions/${sessionId}/users/${currentUser.uid}`).set({\n    timestamp: new Date(),\n  });\n\n  return firestoreRef.doc(`users/${currentUser.uid}`).set(\n    {\n      sessions: [...sessions.map(({ key }) => key), sessionId],\n    },\n    { merge: true }\n  );\n};\n","import * as FirebaseService from './FirebaseService';\n\nexport const listenToLoginChanges = (setCurrentUser, setAuthLoading) =>\n  FirebaseService.listenToLoginChanges(setCurrentUser, setAuthLoading);\n\nexport const loginWithEmailAndPassword = (email, password) =>\n  FirebaseService.loginWithEmailAndPassword(email, password);\n\nexport const logOut = () => FirebaseService.logOut();\n\nexport const registerWithEmailAndPassword = (name, email, password) =>\n  FirebaseService.registerWithEmailAndPassword(name, email, password);\n","import React, { createContext, useState, useContext, useEffect } from 'react';\nimport {\n  listenToLoginChanges,\n  loginWithEmailAndPassword,\n  logOut,\n  registerWithEmailAndPassword,\n} from '../services/AuthService';\nimport { useShowAlert } from './AlertContext';\n\nexport const AuthContext = createContext({});\n\nconst _loginWithEmailAndPassword = showAlert => async (email, password) => {\n  try {\n    return await loginWithEmailAndPassword(email, password);\n  } catch (error) {\n    showAlert({\n      text: error.message,\n    });\n  }\n};\n\nconst _registerWithEmailAndPassword = showAlert => async (name, email, password) => {\n  try {\n    return await registerWithEmailAndPassword(name, email, password);\n  } catch (error) {\n    showAlert({\n      text: error.message,\n    });\n  }\n};\n\nconst AuthContextProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthLoading, setAuthLoading] = useState(true);\n  const showAlert = useShowAlert();\n\n  useEffect(() => {\n    listenToLoginChanges(setCurrentUser, setAuthLoading);\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthLoading,\n        currentUser,\n        loginWithEmailAndPassword: _loginWithEmailAndPassword(showAlert),\n        logOut,\n        registerWithEmailAndPassword: _registerWithEmailAndPassword(showAlert),\n      }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport default AuthContextProvider;\n","import * as FirebaseDataService from './FirebaseService';\n\nexport const ENTITIES = {\n  DIE: 'Die',\n  SESSION: 'Session',\n};\n\nexport const addData = async (entityName, value, array, currentUser) => {\n  switch (entityName) {\n    case ENTITIES.DIE:\n      return FirebaseDataService.addDie(value, currentUser);\n    case ENTITIES.SESSION:\n      return FirebaseDataService.addSession(value, array, currentUser);\n    default:\n      throw new Error('Unknown entity');\n  }\n};\n\nexport const removeData = async (entityName, value, array, currentUser, showAlert) => {\n  switch (entityName) {\n    case ENTITIES.DIE:\n      return FirebaseDataService.removeDie(value, currentUser);\n    case ENTITIES.SESSION:\n      try {\n        return await FirebaseDataService.removeSession(value, array, currentUser);\n      } catch (error) {\n        showAlert({\n          text: error.message,\n        });\n      }\n      break;\n    default:\n      throw new Error('Unknown entity');\n  }\n};\n\nexport const clearData = async (entityName, currentUser) => {\n  switch (entityName) {\n    case ENTITIES.DIE:\n      return FirebaseDataService.clearDie(currentUser);\n    case ENTITIES.SESSION:\n      break;\n    default:\n      throw new Error('Unknown entity');\n  }\n};\n\nexport const loadData = async (\n  currentUser,\n  currentSession,\n  setDice,\n  setSessions,\n  setCurrentUser,\n  setCurrentSession,\n  setSessionDice\n) => {\n  return FirebaseDataService.loadData(\n    currentUser,\n    currentSession,\n    setDice,\n    setSessions,\n    setCurrentUser,\n    setCurrentSession,\n    setSessionDice\n  );\n};\n\nexport const getData = (entityName, entityId) => {\n  switch (entityName) {\n    case ENTITIES.SESSION:\n      return FirebaseDataService.getSession(entityId);\n    default:\n      throw new Error('Unknown entity');\n  }\n};\n\nexport const joinSession = (sessionId, sessions, currentUser) =>\n  FirebaseDataService.joinSession(sessionId, sessions, currentUser);\n","import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { AsyncStorage } from 'react-native';\nimport {\n  ENTITIES,\n  loadData,\n  addData,\n  removeData,\n  clearData,\n  getData,\n  joinSession,\n} from '../services/DataService';\nimport { useAuth } from './AuthContext';\nimport { useShowAlert } from './AlertContext';\n\nexport const DataContext = createContext({});\n\nconst actionBuilder = (array, name, currentUser, showAlert) => ({\n  [`add${name}`]: value => addData(name, value, array, currentUser),\n  [`remove${name}`]: value => removeData(name, value, array, currentUser, showAlert),\n  [`clear${name}`]: () => clearData(name, currentUser),\n});\n\nconst chooseSession = setCurrentSession => session => {\n  setCurrentSession(session);\n  return AsyncStorage.setItem('currentSession', session.key);\n};\n\nconst getSession = sessionId => getData(ENTITIES.SESSION, sessionId);\n\nconst _joinSession = (currentUser, sessions) => sessionId =>\n  joinSession(sessionId, sessions, currentUser);\n\nconst DataContextProvider = ({ children }) => {\n  const { currentUser } = useAuth();\n  const [dice, setDice] = useState([]);\n  const [sessions, setSessions] = useState([]);\n  const [currentSession, setCurrentSession] = useState(null);\n  const [sessionDice, setSessionDice] = useState([]);\n  const [isDataLoading, setDataLoading] = useState([]);\n  const showAlert = useShowAlert();\n\n  useEffect(() => {\n    let unsubscribes;\n    loadData(\n      currentUser,\n      currentSession,\n      setDice,\n      setSessions,\n      setCurrentSession,\n      setSessionDice\n    ).then(subscriptions => {\n      setDataLoading(false);\n      unsubscribes = subscriptions;\n    });\n\n    return () => {\n      if (unsubscribes && unsubscribes.length) {\n        console.log(`unsubscribing from ${unsubscribes.length} subscriptions`);\n        unsubscribes.forEach(unsubscribe => unsubscribe());\n      }\n    };\n  }, [currentSession, currentUser]);\n\n  return (\n    <DataContext.Provider\n      value={{\n        isDataLoading,\n        dice,\n        ...actionBuilder(dice, ENTITIES.DIE, currentUser, showAlert),\n        sessions,\n        ...actionBuilder(sessions, ENTITIES.SESSION, currentUser, showAlert),\n        getSession,\n        currentSession,\n        setCurrentSession: chooseSession(setCurrentSession),\n        sessionDice,\n        joinSession: _joinSession(currentUser, sessions),\n      }}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n\nexport const useData = () => {\n  return useContext(DataContext);\n};\n\nexport default DataContextProvider;\n","import React, { createContext, useState, useContext } from 'react';\n\nexport const AppContext = createContext({});\n\nconst AppContextProvider = ({ children }) => {\n  const [isAppLoading, setAppLoading] = useState(true);\n\n  return (\n    <AppContext.Provider\n      value={{\n        isAppLoading,\n        setAppLoading,\n      }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport const useApp = () => {\n  return useContext(AppContext);\n};\n\nexport default AppContextProvider;\n","import React from 'react';\nimport { View, StyleSheet, ScrollView } from 'react-native';\nimport { Text, Headline } from 'react-native-paper';\nimport { useData } from '../context/DataContext';\nimport { Die, ScreenContainer, Spacer } from '../components';\n\nconst Row = ({ children }) => <View style={styles.row}>{children}</View>;\n\nconst Window = ({ data: { user, dice } }) => {\n  const total = dice.reduce((acc, { value }) => acc + value, 0);\n\n  return (\n    <View style={styles.window}>\n      <Text style={styles.userName}>{user.name}</Text>\n      <ScrollView style={styles.scrollContainer} contentContainerStyle={styles.scrollViewContainer}>\n        {dice.map(({ key, type, value }) => (\n          <Die key={key} type={type} value={value} />\n        ))}\n      </ScrollView>\n      <View style={styles.total}>\n        <Headline>Total: {total}</Headline>\n      </View>\n    </View>\n  );\n};\n\nconst calculateRows = (listSize, index = 2) => {\n  if (listSize <= 3) {\n    return [1, listSize];\n  }\n\n  return [2, Math.ceil(listSize / index)];\n};\n\nconst BoardScreen = () => {\n  const { sessionDice, currentSession } = useData();\n\n  if (!currentSession) {\n    return (\n      <ScreenContainer centered>\n        <Text>Please select a session first.</Text>\n      </ScreenContainer>\n    );\n  }\n\n  if (!sessionDice.length) {\n    return (\n      <ScreenContainer centered>\n        <Headline>To see the Board, first invite some friends to your session.</Headline>\n        <Spacer />\n        <Text>\n          Go to Sessions screen, touch on a session's option icon, copy it's URL and share to your\n          friends.\n        </Text>\n      </ScreenContainer>\n    );\n  }\n\n  const [rows, elementsPerRow] = calculateRows(sessionDice.length);\n\n  let groups;\n  if (rows === 1) {\n    groups = [sessionDice];\n  } else {\n    groups = sessionDice.reduce((acc, item, index) => {\n      if (index % elementsPerRow === 0) {\n        return [...acc, [item]];\n      }\n      acc[acc.length - 1].push(item);\n      return acc;\n    }, []);\n  }\n\n  return (\n    <ScreenContainer>\n      {groups.map((group, index) => (\n        <Row key={`${index}`}>\n          {group.map(data => (\n            <Window key={data.user.key} data={data} />\n          ))}\n        </Row>\n      ))}\n    </ScreenContainer>\n  );\n};\n\nBoardScreen.navigationOptions = {\n  header: null,\n};\nBoardScreen.title = 'Board';\nBoardScreen.iconName = 'desktop';\n\nconst styles = StyleSheet.create({\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    height: '100%',\n  },\n  window: {\n    flex: 1,\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderColor: '#dddddd',\n  },\n  scrollContainer: {\n    width: '100%',\n    marginTop: 30,\n  },\n  scrollViewContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  total: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n    paddingVertical: 10,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderTopColor: '#dddddd',\n    borderTopWidth: 1,\n  },\n  userName: {\n    position: 'absolute',\n    top: 5,\n    left: 5,\n  },\n});\n\nexport default BoardScreen;\n","import React, { Fragment } from 'react';\nimport { Platform, ScrollView, StyleSheet, View } from 'react-native';\nimport { Headline, Text } from 'react-native-paper';\nimport { Ionicons } from '@expo/vector-icons';\nimport { buttonStyle } from '../constants/Button';\nimport { OutlinedButton, DieButton, Die, ScreenContainer } from '../components';\nimport { useData } from '../context/DataContext';\n\nconst DiceRollScreen = () => {\n  const { dice, addDie, removeDie, clearDie, currentSession } = useData();\n\n  if (!currentSession) {\n    return (\n      <View style={styles.emptyMessage}>\n        <Text>Please select a session first.</Text>\n      </View>\n    );\n  }\n\n  const total = dice.reduce((acc, die) => acc + die.value, 0);\n\n  return (\n    <ScreenContainer>\n      {dice.length === 0 && (\n        <View style={styles.emptyMessage}>\n          <Text>Tap buttons below to roll some dice</Text>\n        </View>\n      )}\n\n      {dice.length > 0 && (\n        <Fragment>\n          <ScrollView style={styles.scrollContainer} contentContainerStyle={styles.rolledDice}>\n            {dice.map(die => (\n              <Die key={die.key} type={die.type} value={die.value} onPress={() => removeDie(die)} />\n            ))}\n          </ScrollView>\n          <View style={styles.total}>\n            <Headline>Total: {total}</Headline>\n          </View>\n        </Fragment>\n      )}\n\n      <View style={styles.dice}>\n        <DieButton faces={4} onPress={addDie} />\n        <DieButton faces={6} onPress={addDie} />\n        <DieButton faces={8} onPress={addDie} />\n        <DieButton faces={10} onPress={addDie} />\n        <DieButton faces={12} onPress={addDie} />\n        <DieButton faces={20} onPress={addDie} />\n        <OutlinedButton style={buttonStyle.button} compact onPress={clearDie}>\n          <Ionicons name=\"ios-refresh\" />\n        </OutlinedButton>\n      </View>\n    </ScreenContainer>\n  );\n};\n\nDiceRollScreen.navigationOptions = {\n  header: null,\n};\n\nDiceRollScreen.title = 'Roll';\nDiceRollScreen.iconName = 'cube';\n\nconst shadow = {\n  ...Platform.select({\n    ios: {\n      shadowColor: 'black',\n      shadowOffset: { width: 0, height: -3 },\n      shadowOpacity: 0.1,\n      shadowRadius: 3,\n    },\n    android: {\n      elevation: 20,\n    },\n    web: {\n      boxShadow: '0 -3px 3px rgba(0, 0, 0, 0.1)',\n    },\n  }),\n};\n\nconst styles = StyleSheet.create({\n  emptyMessage: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  scrollContainer: {\n    width: '100%',\n    ...Platform.select({\n      ios: {\n        marginTop: 30,\n      },\n    }),\n  },\n  rolledDice: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  total: {\n    backgroundColor: '#ffffff',\n    paddingVertical: 20,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderTopColor: '#dddddd',\n    borderTopWidth: 1,\n  },\n  dice: {\n    ...shadow,\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default DiceRollScreen;\n","import React, { Fragment, useState } from 'react';\nimport { StyleSheet, FlatList, Clipboard } from 'react-native';\nimport {\n  List,\n  Text,\n  FAB,\n  Dialog,\n  Portal,\n  Button,\n  IconButton,\n  TextInput,\n  Menu,\n} from 'react-native-paper';\nimport { useData } from '../../context/DataContext';\nimport { useAuth } from '../../context/AuthContext';\nimport { ScreenContainer } from '../../components';\n\nconst dismissModal = (setOpen, setName) => () => {\n  setOpen(false);\n  setName('');\n};\n\nconst AddSessionDialog = ({ isOpen, setOpen, addSession }) => {\n  const [name, setName] = useState('');\n  const dismiss = dismissModal(setOpen, setName);\n\n  return (\n    <Portal>\n      <Dialog visible={isOpen} onDismiss={dismiss}>\n        <Dialog.Title>New Session</Dialog.Title>\n        <Dialog.Content>\n          <TextInput label=\"Name\" value={name} onChangeText={text => setName(text)} />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={dismiss}>Cancel</Button>\n          <Button\n            onPress={() => {\n              addSession({ name });\n              dismiss();\n            }}>\n            OK\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n};\n\nconst SessionMenu = ({ removeSession, session, currentUser, ...props }) => {\n  const [isVisible, setVisible] = useState(false);\n  const dismiss = () => setVisible(false);\n  return (\n    <Menu\n      visible={isVisible}\n      onDismiss={dismiss}\n      anchor={<IconButton {...props} icon=\"more-vert\" onPress={() => setVisible(true)} />}>\n      <Menu.Item\n        onPress={() => {\n          Clipboard.setString(`https://willcrisis.github.io/diceroller/#/join/${session.key}`);\n          dismiss();\n        }}\n        title=\"Copy link\"\n        icon=\"content-copy\"\n      />\n      {session.owner === currentUser.uid && (\n        <Menu.Item\n          onPress={() => setTimeout(() => removeSession(session), 200)}\n          title=\"Delete\"\n          icon=\"delete\"\n        />\n      )}\n    </Menu>\n  );\n};\n\nconst selectSession = async (session, setCurrentSession, navigation) => {\n  await setCurrentSession(session);\n  navigation.navigate('roll');\n};\n\nconst currentSessionBackground = (currentSession, session) => ({\n  backgroundColor: currentSession && currentSession.key === session.key ? '#52d98f' : '#ffffff',\n});\n\nconst SessionsScreen = ({ navigation }) => {\n  const { sessions, addSession, removeSession, setCurrentSession, currentSession } = useData();\n  const { currentUser } = useAuth();\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  return (\n    <Fragment>\n      {sessions.length > 0 && (\n        <FlatList\n          data={sessions}\n          renderItem={({ item }) => (\n            <List.Item\n              style={[styles.listItem, currentSessionBackground(currentSession, item)]}\n              title={item.name}\n              onPress={() => selectSession(item, setCurrentSession, navigation)}\n              right={props => (\n                <SessionMenu\n                  {...props}\n                  session={item}\n                  removeSession={removeSession}\n                  currentUser={currentUser}\n                />\n              )}\n            />\n          )}\n        />\n      )}\n      {sessions.length === 0 && (\n        <ScreenContainer centered>\n          <Text>You don't have any session yet.</Text>\n        </ScreenContainer>\n      )}\n      <AddSessionDialog\n        isOpen={isModalOpen}\n        setOpen={setModalOpen}\n        addSession={session => addSession(session)}\n      />\n      <FAB style={styles.fab} icon=\"add\" onPress={() => setModalOpen(true)} />\n    </Fragment>\n  );\n};\n\nSessionsScreen.title = 'Sessions';\nSessionsScreen.iconName = 'albums';\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  listItem: {\n    borderBottomColor: '#dddddd',\n    borderBottomWidth: 1,\n  },\n});\n\nexport default SessionsScreen;\n","import React from 'react';\nimport { View } from 'react-native';\nimport { ExpoConfigView } from '@expo/samples';\nimport { OutlinedButton, ScreenContainer } from '../components';\nimport { useAuth } from '../context/AuthContext';\n\nconst SettingsScreen = () => {\n  const { logOut } = useAuth();\n  return (\n    <ScreenContainer>\n      <View>\n        <OutlinedButton onPress={logOut}>Logout</OutlinedButton>\n      </View>\n      <ExpoConfigView />\n    </ScreenContainer>\n  );\n};\n\nSettingsScreen.title = 'Settings';\nSettingsScreen.iconName = 'options';\n\nSettingsScreen.navigationOptions = {\n  title: 'app.json',\n};\n\nexport default SettingsScreen;\n","import { Platform } from 'react-native';\nimport BoardScreen from './BoardScreen';\nimport DiceRollScreen from './DiceRollScreen';\nimport SessionsScreen from './Session/SessionsScreen';\nimport SettingsScreen from './SettingsScreen';\n\nexport default {\n  ...Platform.select({\n    web: {\n      board: BoardScreen,\n    },\n  }),\n  roll: DiceRollScreen,\n  sessions: SessionsScreen,\n  settings: SettingsScreen,\n};\n\nexport const config = {\n  initialRouteName: 'sessions',\n};\n","import React from 'react';\nimport { Platform } from 'react-native';\nimport { createStackNavigator } from 'react-navigation';\nimport { Appbar } from 'react-native-paper';\nimport { createMaterialBottomTabNavigator } from 'react-navigation-material-bottom-tabs';\n\nimport TabBarIcon from '../components/TabBarIcon';\nimport screens, { config as tabsConfig } from '../screens/tabs';\n\nconst config = Platform.select({\n  web: { headerMode: 'screen' },\n  default: {},\n});\n\nconst reduceFn = (acc, { id, Component }) => {\n  let routes;\n  if (typeof Component === 'object' && !Component.screen) {\n    routes = Object.keys(Component.screens)\n      .map(id => ({ id, Component: Component.screens[id] }))\n      .reduce(reduceFn, {});\n  } else {\n    const Comp = Component.screen || Component;\n    const Screen = props => <Comp {...props} />;\n    Screen.navigationOptions = props => {\n      return {\n        header: (\n          <Appbar.Header>\n            <Appbar.Content title={Comp.title} />\n          </Appbar.Header>\n        ),\n        ...(typeof Comp.navigationOptions === 'function'\n          ? Comp.navigationOptions(props)\n          : Comp.navigationOptions),\n      };\n    };\n\n    routes = {\n      [id]: Screen,\n    };\n  }\n\n  const Stack = createStackNavigator(routes, Object.assign({}, config, Component.config));\n\n  Stack.navigationOptions = {\n    tabBarLabel: Component.title,\n    tabBarIcon: ({ focused }) => (\n      <TabBarIcon\n        focused={focused}\n        name={Platform.OS === 'ios' ? `ios-${Component.iconName}` : `md-${Component.iconName}`}\n      />\n    ),\n  };\n\n  Stack.path = Component.path || '';\n\n  return {\n    ...acc,\n    [id]: Stack,\n  };\n};\n\nconst routes = Object.keys(screens)\n  .map(id => ({ id, Component: screens[id] }))\n  .reduce(reduceFn, {});\n\nconst TabNavigator = createMaterialBottomTabNavigator(routes, tabsConfig);\n\nexport default TabNavigator;\n","import React, { useEffect, useState, Fragment } from 'react';\nimport { Headline, ActivityIndicator, Text } from 'react-native-paper';\nimport { useData } from '../../context/DataContext';\nimport { ContainedButton, Spacer, ScreenContainer } from '../../components';\n\nconst join = (sessionId, joinSession, navigation) => {\n  joinSession(sessionId);\n  goToSessions(navigation);\n};\n\nconst goToSessions = navigation => navigation.navigate('sessions');\n\nconst JoinSessionScreen = ({ navigation }) => {\n  const { getSession, joinSession, sessions } = useData();\n  const [session, setSession] = useState(null);\n  const [loadingSession, setLoadingSession] = useState(true);\n  const sessionId = navigation.getParam('session');\n\n  useEffect(() => {\n    const loadSession = async () => {\n      const sessionData = await getSession(sessionId);\n      setSession(sessionData);\n      setLoadingSession(false);\n    };\n    loadSession();\n  }, []);\n\n  const exists = sessions.find(({ key }) => session && session.key === key);\n\n  return (\n    <ScreenContainer centered>\n      {loadingSession && <ActivityIndicator />}\n      {!loadingSession && (\n        <Fragment>\n          {exists ? (\n            <Text>You already joined this session</Text>\n          ) : (\n            <Text>Would you like to join this session?</Text>\n          )}\n          <Spacer />\n          <Headline>{session.name}</Headline>\n          <Spacer />\n          {exists ? (\n            <ContainedButton onPress={() => goToSessions(navigation)}>\n              Go to Sessions Page\n            </ContainedButton>\n          ) : (\n            <ContainedButton onPress={() => join(sessionId, joinSession, navigation)}>\n              Join Session\n            </ContainedButton>\n          )}\n        </Fragment>\n      )}\n    </ScreenContainer>\n  );\n};\n\nJoinSessionScreen.navigationOptions = {\n  header: null,\n};\n\nexport default JoinSessionScreen;\n","import React from 'react';\nimport { AppLoading } from 'expo';\nimport { Asset } from 'expo-asset';\nimport * as Font from 'expo-font';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport { useApp } from '../context/AppContext';\n\nconst LoadingScreen = ({ navigation }) => {\n  const { setAppLoading } = useApp();\n  return (\n    <AppLoading\n      startAsync={loadResourcesAsync}\n      onError={handleLoadingError}\n      onFinish={() => handleFinishLoading(setAppLoading)}\n    />\n  );\n};\n\nasync function loadResourcesAsync() {\n  await Promise.all([\n    Asset.loadAsync([\n      require('../assets/images/robot-dev.png'),\n      require('../assets/images/robot-prod.png'),\n    ]),\n    Font.loadAsync({\n      // This is the font that we are using for our tab bar\n      ...Ionicons.font,\n    }),\n  ]);\n}\n\nfunction handleLoadingError(error) {\n  // In this case, you might want to report the error to your error reporting\n  // service, for example Sentry\n  console.warn(error);\n}\n\nfunction handleFinishLoading(setAppLoading) {\n  setAppLoading(false);\n}\n\nexport default LoadingScreen;\n","import React, { useState } from 'react';\nimport { TextInput, Headline, Title } from 'react-native-paper';\nimport { useAuth } from '../../context/AuthContext';\nimport { OutlinedButton, Spacer, ScreenContainer } from '../../components';\n\nconst AuthScreen = ({ navigation }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { loginWithEmailAndPassword } = useAuth();\n\n  return (\n    <ScreenContainer centered>\n      <Headline>Dice Roller</Headline>\n      <Spacer />\n      <Title>Login</Title>\n      <Spacer />\n      <TextInput\n        mode=\"outlined\"\n        label=\"E-mail\"\n        value={email}\n        error={!email}\n        onChangeText={text => setEmail(text)}\n      />\n      <Spacer />\n      <TextInput\n        mode=\"outlined\"\n        label=\"Password\"\n        value={password}\n        error={!password}\n        onChangeText={text => setPassword(text)}\n        secureTextEntry\n      />\n      <Spacer />\n      <OutlinedButton onPress={() => loginWithEmailAndPassword(email, password)}>\n        Login\n      </OutlinedButton>\n      <Spacer />\n      <OutlinedButton onPress={() => navigation.navigate('Register')}>Register</OutlinedButton>\n    </ScreenContainer>\n  );\n};\n\nexport default AuthScreen;\n","import React, { useState } from 'react';\nimport { TextInput, Headline, Title } from 'react-native-paper';\nimport { ScreenContainer, Spacer, OutlinedButton } from '../../components';\nimport { useAuth } from '../../context/AuthContext';\nimport { useShowAlert } from '../../context/AlertContext';\n\nconst validatePassword = (showAlert, password, confirmPassword) => {\n  return (\n    password === confirmPassword ||\n    (showAlert({\n      text: 'Passwords must match',\n    }) &&\n      false)\n  );\n};\n\nconst RegisterScreen = ({ navigation }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const { registerWithEmailAndPassword } = useAuth();\n  const showAlert = useShowAlert();\n\n  return (\n    <ScreenContainer centered>\n      <Headline>Dice Roller</Headline>\n      <Spacer />\n      <Title>Register</Title>\n      <Spacer />\n      <TextInput\n        mode=\"outlined\"\n        label=\"Name\"\n        value={name}\n        error={!name}\n        onChangeText={text => setName(text)}\n      />\n      <Spacer />\n      <TextInput\n        mode=\"outlined\"\n        label=\"E-mail\"\n        value={email}\n        error={!email}\n        onChangeText={text => setEmail(text)}\n      />\n      <Spacer />\n      <TextInput\n        mode=\"outlined\"\n        label=\"Password\"\n        value={password}\n        error={!password}\n        onChangeText={text => setPassword(text)}\n        secureTextEntry\n      />\n      <Spacer />\n      <TextInput\n        mode=\"outlined\"\n        label=\"Confirm Password\"\n        value={confirmPassword}\n        error={!confirmPassword}\n        onChangeText={text => setConfirmPassword(text)}\n        secureTextEntry\n      />\n      <Spacer />\n      <OutlinedButton\n        onPress={() =>\n          validatePassword(showAlert, password, confirmPassword) &&\n          registerWithEmailAndPassword(name, email, password)\n        }>\n        Register\n      </OutlinedButton>\n      <Spacer />\n      <OutlinedButton onPress={() => navigation.goBack()}>Go back</OutlinedButton>\n    </ScreenContainer>\n  );\n};\n\nexport default RegisterScreen;\n","import React, { useEffect } from 'react';\nimport { createSwitchNavigator, createStackNavigator } from 'react-navigation';\nimport MainTabNavigator from './MainTabNavigator';\nimport JoinScreen from '../screens/Session/JoinSessionScreen';\nimport LoadingScreen from '../screens/LoadingScreen';\nimport AuthScreen from '../screens/Auth/AuthScreen';\nimport RegisterScreen from '../screens/Auth/RegisterScreen';\nimport { useAuth } from '../context/AuthContext';\nimport { useData } from '../context/DataContext';\nimport { useApp } from '../context/AppContext';\n\nconst AppNavigator = createSwitchNavigator({\n  Main: {\n    screen: MainTabNavigator,\n    path: '',\n  },\n  Join: {\n    screen: JoinScreen,\n    path: 'join/:session',\n  },\n});\nAppNavigator.path = '';\n\nconst AuthNavigator = createStackNavigator({\n  Auth: {\n    screen: AuthScreen,\n    navigationOptions: {\n      header: null,\n    },\n    path: '',\n  },\n  Register: {\n    screen: RegisterScreen,\n    navigationOptions: {\n      header: null,\n    },\n    path: 'register',\n  },\n});\nAuthNavigator.path = '';\n\nconst SwitchNavigator = createSwitchNavigator(\n  {\n    Auth: AuthNavigator,\n    App: AppNavigator,\n  },\n  {\n    initialRouteName: 'App',\n  }\n);\nSwitchNavigator.path = '';\n\nconst TestNavigator = props => {\n  const { isAuthLoading, currentUser } = useAuth();\n  const { isDataLoading } = useData();\n  const { isAppLoading } = useApp();\n\n  const isLoading = isAuthLoading || isDataLoading || isAppLoading;\n\n  useEffect(() => {\n    if (!isLoading) {\n      props.navigation.navigate(currentUser ? 'App' : 'Auth');\n    }\n  }, [isAppLoading, isAuthLoading, isDataLoading, currentUser]);\n\n  if (isLoading) {\n    return <LoadingScreen {...props} />;\n  }\n\n  return <SwitchNavigator {...props} />;\n};\n\nTestNavigator.router = SwitchNavigator.router;\n\nexport default TestNavigator;\n","import { createBrowserApp } from '@react-navigation/web';\nimport MainNavigation from './MainNavigation';\n\nMainNavigation.path = '';\n\nconst BrowserApp = createBrowserApp(MainNavigation, { history: 'hash' });\n\nexport default BrowserApp;\n","import React from 'react';\nimport { Linking } from 'expo';\nimport { Platform, StatusBar } from 'react-native';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { useScreens } from 'react-native-screens';\nimport { ScreenContainer } from './components';\nimport configure from './config';\nimport AlertProvider from './context/AlertContext';\nimport AuthProvider from './context/AuthContext';\nimport DataProvider from './context/DataContext';\nimport AppProvider from './context/AppContext';\nimport AppNavigator from './navigation/AppNavigator';\n\nconfigure();\nuseScreens();\n\nconst appPrefix = Linking.makeUrl('/');\n\nconst App = () => {\n  return (\n    <AlertProvider>\n      <AuthProvider>\n        <DataProvider>\n          <AppProvider>\n            <PaperProvider>\n              <ScreenContainer>\n                {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\n                <AppNavigator uriPrefix={appPrefix} />\n              </ScreenContainer>\n            </PaperProvider>\n          </AppProvider>\n        </DataProvider>\n      </AuthProvider>\n    </AlertProvider>\n  );\n};\n\nexport default App;\n","module.exports = __webpack_public_path__ + \"static/media/robot-dev.54da1e98.png\";","module.exports = __webpack_public_path__ + \"static/media/robot-prod.c7578911.png\";"],"sourceRoot":""}